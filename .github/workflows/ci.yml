# Setup CI workflow:
  # create new unity project
  # clone unidi into project
  
name: CI 

# Maybe a shorter/faster version is needed for PR's
# on: [push, pull_request]
on:
  push:
    branches:
      - master
jobs:
  buildAndTestForSupportedPlatforms:

    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        homePath: 
          - /home/runner/work/gh_playtests/gh_playtests
        projectPath:
          - UnityProject
        packagePath:
          - Library/Packages/UniDi
        unityVersion:
          - 2019.4.1f1
        targetPlatform:
          # - Android # Build a Android standalone.
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          # - StandaloneWindows64 # Build a Windows 64-bit standalone.
          # - WebGL # WebGL.
          - iOS # Build an iOS player.
          # Not supported platforms by GitHub actions:
          # - Windows Store # Build a standalone for Windows Store devices.
          # - PS4 # Build a Playstation 4 standalone.

    steps:

      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Create Empty Unity project
      - name: Create Unity Project
        uses: jbltx/unity-create@v1.1
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          projectPath: ${{ matrix.projectPath }}

      # Create UniDi path with write permissions
      - run: |
              # sudo mkdir UnityProject/Library/Packages/UniDi
              sudo mkdir ${{ matrix.homePath }}/${{ matrix.projectPath }}/${{ matrix.packagePath }}
              # sudo chmod -R UnityProject/Library/Packages/UniDi
              sudo chmod -R ${{ matrix.homePath }}/${{ matrix.projectPath }}/${{ matrix.packagePath }}

      # Checkout
      - name: Checkout and Clone Repository
        uses: actions/checkout@v2
        with:
          # below throws an error... need to clone repo in project's /Packages path
          repository: UniDi/UniDi
          # path: ${{ matrix.projectPath }}
          path: UnityProject/Library/Packages/UniDi

      # Cache
      - name: Caching Unity Project Library
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      # Test Runner
      - name: Run Tests
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Upload Test Artifacts
      - name: Upload Test Results Artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

      # Build
      - name: Build 
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          # Allow Dirty Build as the semantic version is doing unsuspecting things
          # this could be something to look further into
          allowDirtyBuild: true
          # repository: UniDi/UniDi
