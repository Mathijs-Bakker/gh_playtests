# Setup CI workflow:
  # create new unity project
  # clone unidi into project
  
name: CI 

on: [push, pull_request]

jobs:
  buildAndTestForSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - UnityProject
        unityVersion:
          - 2019.4.1f1
        targetPlatform:
          - Android # Build a Android standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - WebGL # WebGL.
          - iOS # Build an iOS player.
          # Not supported platforms by GitHub actions:
          # - Windows Store # Build a standalone for Windows Store devices.
          # - PS4 # Build a Playstation 4 standalone.

    steps:

      # Activation
      - name: Request activation file

        uses: actions/checkout@v2

        uses: webbertakken/unity-request-manual-activation-file@v2
        id: getManualLicenseFile

        uses: actions/upload-artifact@v2
        with:
          name: Manual Activation File
          path: ${{ steps.getManualLicenseFile.outputs.filepath }}


      # Create Empty Unity project
      - name: Create Unity Project
        uses: jbltx/unity-create@v1.1
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          projectPath: ${{ matrix.projectPath }}/Packages

      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: UniDi/UniDi
          path: ${{ matrix.projectPath }}
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: WebGL

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
